{"ast":null,"code":"var _jsxFileName = \"/home/shara/Workplace_Management/Frontend/src/components/pages/newReservation/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Row, Col, ListGroup, Card } from \"react-bootstrap\";\nimport NavBar from \"../../../services/Navbar\";\nimport { FormButton } from \"../../../services/Buttons\";\nimport styles from \"../../../css/index.module.css\";\nimport { InputEffect } from \"../../../services/Inputs\";\nimport Alert from \"../../../services/Alert\";\nimport { submit, startTime, finalTime, // verifyAvailable,\nhandlePickSelected, ShowDateReservation } from \"./NewReservation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Newreservation = () => {\n  _s();\n\n  const [newReservation, setNewReservation] = useState({});\n  const [showFinalPickTime, setFinalShowPickTime] = useState(false);\n  const [showPickStationAvailable, setShowPickStationAvailable] = useState(false);\n  const [stationSelected, setStationSelected] = useState();\n  const [stationsAvailable, setStationsAvailable] = useState([]);\n  const [showErrorMsg, setShowErrorMsg] = useState(null);\n  const recoveryUser = localStorage.getItem(\"user\");\n  const user = JSON.parse(recoveryUser);\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    console.log(newReservation.startDate);\n    submit(e, newReservation, user, stationSelected, setShowErrorMsg, setFinalShowPickTime, navigate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.newReservation_area,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.date_time_zone,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select a day and the starting time of your reservation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputEffect, {\n              textLabel: \"Select a day and time:\",\n              type: \"datetime-local\",\n              name: \"startDate\",\n              handleOnChange: e => startTime(e, setNewReservation, newReservation, setFinalShowPickTime, setStationSelected, setShowErrorMsg)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), showFinalPickTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.date_time_zone,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select the final time for your reservation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputEffect, {\n              textLabel: \"End time\",\n              type: \"time\",\n              name: \"finalDate\",\n              handleOnChange: e => finalTime(newReservation, e, setNewReservation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              text: \"Check Availability\" // handleClick={e =>\n              //   verifyAvailable(e, newReservation, setStationsAvailable, setShowPickStationAvailable)\n              // }\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), showPickStationAvailable ? /*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Available desktops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: stationsAvailable.map(station => {\n              let desktopText = 'Choose desktop ' + station.id;\n              return /*#__PURE__*/_jsxDEV(FormButton, {\n                text: desktopText,\n                handleClick: e => handlePickSelected(e, station, setStationSelected, setShowPickStationAvailable)\n              }, station.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this) : null, stationSelected ? /*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"18rem\"\n            },\n            className: styles.card,\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: stationSelected.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: stationSelected.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Reserve day: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ShowDateReservation, {\n                  reservation: newReservation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Desk: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), \" \", stationSelected.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n                text: \"Confirm\",\n                handleClick: e => handleSubmit(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n                text: \"Cancel\",\n                handleClick: e => {\n                  e.preventDefault();\n                  setStationSelected(false);\n                  setShowErrorMsg(false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), showErrorMsg ? /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                msg: showErrorMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 35\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Newreservation, \"xxr8kHCW6f07YpgIng0HKhcgHFk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Newreservation;\nexport default Newreservation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newreservation\");","map":{"version":3,"names":["React","useState","useNavigate","Container","Row","Col","ListGroup","Card","NavBar","FormButton","styles","InputEffect","Alert","submit","startTime","finalTime","handlePickSelected","ShowDateReservation","Newreservation","newReservation","setNewReservation","showFinalPickTime","setFinalShowPickTime","showPickStationAvailable","setShowPickStationAvailable","stationSelected","setStationSelected","stationsAvailable","setStationsAvailable","showErrorMsg","setShowErrorMsg","recoveryUser","localStorage","getItem","user","JSON","parse","navigate","handleSubmit","e","console","log","startDate","newReservation_area","date_time_zone","map","station","desktopText","id","width","card","image","name","preventDefault"],"sources":["/home/shara/Workplace_Management/Frontend/src/components/pages/newReservation/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Row, Col, ListGroup, Card } from \"react-bootstrap\";\n\nimport NavBar from \"../../../services/Navbar\";\nimport { FormButton } from \"../../../services/Buttons\";\nimport styles from \"../../../css/index.module.css\";\nimport { InputEffect } from \"../../../services/Inputs\";\nimport Alert from \"../../../services/Alert\";\n\nimport {\n  submit,\n  startTime,\n  finalTime,\n  // verifyAvailable,\n  handlePickSelected,\n  ShowDateReservation\n} from \"./NewReservation\";\n\nconst Newreservation = () => {\n  const [newReservation, setNewReservation] = useState({});\n  const [showFinalPickTime, setFinalShowPickTime] = useState(false);\n  const [showPickStationAvailable, setShowPickStationAvailable] = useState(false);\n  const [stationSelected, setStationSelected] = useState();\n  const [stationsAvailable, setStationsAvailable] = useState([]);\n  const [showErrorMsg, setShowErrorMsg] = useState(null);\n\n  const recoveryUser = localStorage.getItem(\"user\");\n  const user = JSON.parse(recoveryUser);\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    console.log(newReservation.startDate);\n    submit(e, newReservation, user, stationSelected, setShowErrorMsg, setFinalShowPickTime, navigate);\n  };\n\n  return (\n    <form className={styles.newReservation_area}>\n      <NavBar />\n      <Container>\n        <Row>\n          <Col sm={6}>\n            <div className={styles.date_time_zone}>\n              <p>Select a day and the starting time of your reservation:</p>\n              <InputEffect\n                textLabel=\"Select a day and time:\"\n                type=\"datetime-local\"\n                name=\"startDate\"\n                handleOnChange={e => startTime(e, setNewReservation, newReservation, setFinalShowPickTime, setStationSelected, setShowErrorMsg)}\n              />\n            </div>\n            {showFinalPickTime ? (\n              <div className={styles.date_time_zone}>\n                <p>Select the final time for your reservation:</p>\n                <InputEffect\n                  textLabel=\"End time\"\n                  type=\"time\"\n                  name=\"finalDate\"\n                  handleOnChange={e => finalTime(newReservation, e, setNewReservation)}\n                />\n                <FormButton\n                  text=\"Check Availability\"\n                  // handleClick={e =>\n                  //   verifyAvailable(e, newReservation, setStationsAvailable, setShowPickStationAvailable)\n                  // }\n                />\n              </div>\n            ) : null}\n          </Col>\n          {showPickStationAvailable ? (\n            <Col sm={6}>\n              <h2>Available desktops</h2>\n              <ListGroup>\n                {stationsAvailable.map(station => {\n                  let desktopText = 'Choose desktop ' + station.id\n                  return (\n                    <FormButton\n                      text={desktopText}\n                      key={station.id}\n                      handleClick={e =>\n                        handlePickSelected(e, station, setStationSelected, setShowPickStationAvailable)\n                      }\n                    />\n                  );\n                })}\n              </ListGroup>\n            </Col>\n          ) : null}\n          {stationSelected ? (\n            <Col sm={6}>\n              <Card style={{ width: \"18rem\" }} className={styles.card}>\n                <Card.Img variant=\"top\" src={stationSelected.image} />\n                <Card.Body>\n                  <Card.Title>{stationSelected.name}</Card.Title>\n                  <Card.Text>\n                    <strong>Reserve day: </strong>\n                    <ShowDateReservation reservation={newReservation} />\n                  </Card.Text>\n                  <Card.Text>\n                    <strong>Desk: </strong> {stationSelected.id}\n                  </Card.Text>\n                  <FormButton text=\"Confirm\" handleClick={e => handleSubmit(e)} />\n                  <FormButton\n                    text=\"Cancel\"\n                    handleClick={e => {\n                      e.preventDefault();\n                      setStationSelected(false);\n                      setShowErrorMsg(false)\n                    }}\n                  />\n                  {showErrorMsg ? <Alert severity=\"error\" msg={showErrorMsg} /> : null}\n                </Card.Body>\n              </Card>\n            </Col>\n          ) : null}\n        </Row>\n      </Container>\n    </form>\n  );\n};\n\nexport default Newreservation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}