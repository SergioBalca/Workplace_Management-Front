{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://localhost:8000/api/desktop/';\nexport const availableStations = async object => {\n  return await axios.get(baseURL, object);\n};\nexport const createBooking = async object => {\n  return await axios.post('http://localhost:8000/api/reservation/', object);\n};\nexport const submit = async (e, user, navigate, newReservation, stationSelected, setShowErrorMsg, setFinalShowPickTime) => {\n  e.preventDefault();\n  const today = Date.now();\n  const dateSelected = new Date(newReservation.startDate).getTime();\n\n  if (dateSelected < today) {\n    alert('it is not possible to make the reservation, invalid date');\n    setFinalShowPickTime(false);\n    return;\n  }\n\n  const reservation = {\n    stationName: stationSelected.name,\n    ...newReservation,\n    username: user.username\n  };\n\n  try {\n    let start_hour = newReservation.startDate;\n    let finish_hour = start_hour.split('T')[0] + 'T' + newReservation.finalDate;\n    let desktop = localStorage.getItem('station');\n    let user = localStorage.getItem('user_id');\n    await createBooking({\n      \"user\": user,\n      \"desktop\": desktop,\n      \"status\": true,\n      \"start_hour\": start_hour,\n      \"finish_hour\": finish_hour\n    }).then(res => {\n      localStorage.removeItem('station');\n      navigate('/myreservations', {\n        state: {\n          message: 'Reserve created successfully!'\n        }\n      });\n    });\n  } catch (err) {\n    console.log(err);\n    setShowErrorMsg('Some error occurred when making the reservation');\n  }\n};\nexport const startTime = (e, setNewReservation, newReservation, setFinalShowPickTime, setStationSelected, setShowErrorMsg) => {\n  const startDate = e.target.value;\n  setShowErrorMsg(false);\n  setStationSelected(false);\n  setNewReservation({ ...newReservation,\n    [e.target.name]: startDate\n  });\n  startDate !== null ? setFinalShowPickTime(true) : setFinalShowPickTime(false);\n};\nexport const finalTime = (newReservation, e, setNewReservation) => {\n  const finalDate = e.target.value;\n  setNewReservation({ ...newReservation,\n    [e.target.name]: finalDate\n  });\n};\nexport const verifyAvailable = async (e, newReservation, setStationsAvailable, setShowPickStationAvailable) => {\n  e.preventDefault();\n  const initialDate = newReservation.startDate;\n  const endDate = new Date(newReservation.finalDate);\n  const stations = await availableStations({\n    startDate: initialDate,\n    finalDate: endDate\n  });\n  setStationsAvailable(stations.data);\n  setShowPickStationAvailable(true);\n};\nexport const handlePickSelected = (event, station, setStationSelected, setShowPickStationAvailable) => {\n  event.preventDefault();\n  localStorage.setItem('station', station);\n  setStationSelected(station);\n  setShowPickStationAvailable(false);\n};\nexport const ShowDateReservation = _ref => {\n  let {\n    reservation\n  } = _ref;\n  const initialDate = new Date(reservation.startDate).toLocaleDateString();\n  const startHour = new Date(reservation.startDate).getHours().toString().padStart(2, '0');\n  const startMinutes = new Date(reservation.startDate).getMinutes().toString().padStart(2, '0');\n  const endHours = new Date(reservation.finalDate).getHours().toString().padStart(2, '0');\n  const endMinutes = new Date(reservation.finalDate).getMinutes().toString().padStart(2, '0');\n  console.log(endHours);\n  console.log(endMinutes);\n  return `${initialDate} from ${startHour}:${startMinutes} to ${endHours}:${endMinutes}`;\n};\n_c = ShowDateReservation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowDateReservation\");","map":{"version":3,"names":["axios","baseURL","availableStations","object","get","createBooking","post","submit","e","user","navigate","newReservation","stationSelected","setShowErrorMsg","setFinalShowPickTime","preventDefault","today","Date","now","dateSelected","startDate","getTime","alert","reservation","stationName","name","username","start_hour","finish_hour","split","finalDate","desktop","localStorage","getItem","then","res","removeItem","state","message","err","console","log","startTime","setNewReservation","setStationSelected","target","value","finalTime","verifyAvailable","setStationsAvailable","setShowPickStationAvailable","initialDate","endDate","stations","data","handlePickSelected","event","station","setItem","ShowDateReservation","toLocaleDateString","startHour","getHours","toString","padStart","startMinutes","getMinutes","endHours","endMinutes"],"sources":["/home/shara/Workplace_Management/Frontend/src/components/pages/newReservation/NewReservation.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'http://localhost:8000/api/desktop/';\n\nexport const availableStations = async (object) => {\n  return await axios.get(baseURL, object)\n}\n\nexport const createBooking = async (object) => {\n  return await axios.post('http://localhost:8000/api/reservation/', object)\n}\n\nexport const submit = async (\n  e,\n  user,\n  navigate,\n  newReservation,\n  stationSelected,\n  setShowErrorMsg,\n  setFinalShowPickTime,\n) => {\n  e.preventDefault();\n  const today = Date.now();\n  const dateSelected = new Date(newReservation.startDate).getTime();\n  if (dateSelected < today) {\n    alert('it is not possible to make the reservation, invalid date');\n    setFinalShowPickTime(false);\n    return;\n  }\n  const reservation = {\n    stationName: stationSelected.name,\n    ...newReservation,\n    username: user.username\n  }\n  try {\n    let start_hour = newReservation.startDate\n    let finish_hour = start_hour.split('T')[0] + 'T' + newReservation.finalDate\n    let desktop = localStorage.getItem('station')\n    let user = localStorage.getItem('user_id')\n    await createBooking(\n      {\n      \"user\": user,\n      \"desktop\": desktop,\n      \"status\": true,\n      \"start_hour\": start_hour,\n      \"finish_hour\": finish_hour,\n  },).then(res => {\n    localStorage.removeItem('station')\n    navigate('/myreservations', { state: { message: 'Reserve created successfully!' } });\n  });\n  } catch (err) {\n    console.log(err);\n    setShowErrorMsg('Some error occurred when making the reservation');\n  }\n};\n\nexport const startTime = (\n  e,\n  setNewReservation,\n  newReservation,\n  setFinalShowPickTime,\n  setStationSelected,\n  setShowErrorMsg\n) => {\n  const startDate = e.target.value;\n  setShowErrorMsg(false);\n  setStationSelected(false);\n  setNewReservation({ ...newReservation, [e.target.name]: startDate });\n  startDate !== null ? setFinalShowPickTime(true) : setFinalShowPickTime(false);\n};\n\nexport const finalTime = (newReservation, e, setNewReservation) => {\n  const finalDate = e.target.value\n  setNewReservation({ ...newReservation, [e.target.name]: finalDate });\n};\n\nexport const verifyAvailable = async (e, newReservation, setStationsAvailable, setShowPickStationAvailable) => {\n  e.preventDefault();\n  const initialDate = (newReservation.startDate);\n  const endDate = new Date(newReservation.finalDate);\n  const stations = await availableStations({\n    startDate: initialDate,\n    finalDate: endDate,\n  });\n  setStationsAvailable(stations.data);\n  setShowPickStationAvailable(true);\n};\n\nexport const handlePickSelected = (event, station, setStationSelected, setShowPickStationAvailable) => {\n  event.preventDefault();\n  localStorage.setItem('station', station);\n  setStationSelected(station);\n  setShowPickStationAvailable(false);\n};\n\nexport const ShowDateReservation = ({ reservation }) => {\n  const initialDate = new Date(reservation.startDate).toLocaleDateString();\n  const startHour = new Date(reservation.startDate).getHours().toString().padStart(2, '0');\n  const startMinutes = new Date(reservation.startDate).getMinutes().toString().padStart(2, '0');\n\n  const endHours = new Date(reservation.finalDate).getHours().toString().padStart(2, '0');\n  const endMinutes = new Date(reservation.finalDate).getMinutes().toString().padStart(2, '0');\n  console.log(endHours);\n  console.log(endMinutes);\n\n  return `${initialDate} from ${startHour}:${startMinutes} to ${endHours}:${endMinutes}`;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}