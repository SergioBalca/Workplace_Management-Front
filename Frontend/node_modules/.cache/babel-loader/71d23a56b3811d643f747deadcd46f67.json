{"ast":null,"code":"var _jsxFileName = \"/home/shara/Workplace_Management/Frontend/src/services/auth.jsx\",\n    _s = $RefreshSig$();\n\n// overall information\nimport React, { useState, createContext, useEffect } from \"react\";\nimport { api } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(); // creates a global context for application\n\nexport const Authprovider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [setUser] = useState(null); // prevent application from losing login when refreshing:\n\n  useEffect(() => {\n    const recoveredUser = localStorage.getItem(\"user\");\n    const token = localStorage.getItem(\"token\");\n\n    if (recoveredUser && token) {\n      setUser(JSON.parse(recoveredUser));\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n  }); //user != null authenticated = true\n  //user == null authenticated = false\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authprovider, \"yfPJug0cTZdzltkuZVu1DDPjTrc=\");\n\n_c = Authprovider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authprovider\");","map":{"version":3,"names":["React","useState","createContext","useEffect","api","AuthContext","Authprovider","children","setUser","recoveredUser","localStorage","getItem","token","JSON","parse","defaults","headers","Authorization"],"sources":["/home/shara/Workplace_Management/Frontend/src/services/auth.jsx"],"sourcesContent":["// overall information\nimport React, { useState, createContext, useEffect } from \"react\";\n\nimport { api } from \"../services/api\";\n\nexport const AuthContext = createContext(); // creates a global context for application\n\nexport const Authprovider = ({ children }) => {\n  const [setUser] = useState(null);\n\n  // prevent application from losing login when refreshing:\n  useEffect(() => {\n    const recoveredUser = localStorage.getItem(\"user\");\n    const token = localStorage.getItem(\"token\");\n\n    if (recoveredUser && token) {\n      setUser(JSON.parse(recoveredUser));\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n\n  },\n);\n\n  //user != null authenticated = true\n  //user == null authenticated = false\n  return (\n    <AuthContext.Provider>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC,C,CAAqC;;AAE5C,OAAO,MAAMI,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C,MAAM,CAACC,OAAD,IAAYP,QAAQ,CAAC,IAAD,CAA1B,CAD4C,CAG5C;;EACAE,SAAS,CAAC,MAAM;IACd,MAAMM,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAtB;IACA,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;IAEA,IAAIF,aAAa,IAAIG,KAArB,EAA4B;MAC1BJ,OAAO,CAACK,IAAI,CAACC,KAAL,CAAWL,aAAX,CAAD,CAAP;MACAL,GAAG,CAACW,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;IACD;EAEF,CATQ,CAAT,CAJ4C,CAgB5C;EACA;;EACA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAA,UACGL;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAvBM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}