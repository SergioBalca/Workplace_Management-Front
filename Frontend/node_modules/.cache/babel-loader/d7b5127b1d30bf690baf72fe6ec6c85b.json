{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://localhost:8000/api/desktop/';\nexport const availableStations = async object => {\n  return await axios.get(baseURL, object);\n};\nexport const createBooking = async object => {\n  return await axios.post('http://localhost:8000/api/reservation/', object);\n};\nexport const submit = async (e, user, navigate, newReservation, stationSelected, setShowErrorMsg, setFinalShowPickTime) => {\n  e.preventDefault();\n  const today = Date.now();\n  const dateSelected = new Date(newReservation.startDate).getTime();\n\n  if (dateSelected < today) {\n    alert('it is not possible to make the reservation, invalid date');\n    setFinalShowPickTime(false);\n    return;\n  }\n\n  const reservation = {\n    stationName: stationSelected.name,\n    ...newReservation,\n    username: user.username\n  };\n\n  try {\n    await createBooking(reservation);\n    navigate(\"/myreservations\", {\n      state: {\n        message: \"Reserva criada com sucesso!\"\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    setShowErrorMsg(\"Ocorreu algum erro ao realizar a reserva\");\n  }\n};\nexport const startTime = (e, setNewReservation, newReservation, setFinalShowPickTime, setStationSelected, setShowErrorMsg) => {\n  const startDate = e.target.value;\n  setShowErrorMsg(false);\n  setStationSelected(false);\n  setNewReservation({ ...newReservation,\n    [e.target.name]: startDate\n  });\n  startDate !== null ? setFinalShowPickTime(true) : setFinalShowPickTime(false);\n};\nexport const finalTime = (newReservation, e, setNewReservation) => {\n  const finalDate = e.target.value;\n  setNewReservation({ ...newReservation,\n    [e.target.name]: finalDate\n  });\n};\nexport const verifyAvailable = async (e, newReservation, setStationsAvailable, setShowPickStationAvailable) => {\n  e.preventDefault();\n  const initialDate = newReservation.startDate;\n  const endDate = new Date(newReservation.finalDate);\n  const stations = await availableStations({\n    startDate: initialDate,\n    finalDate: endDate\n  });\n  setStationsAvailable(stations.data);\n  setShowPickStationAvailable(true);\n};\nexport const handlePickSelected = (event, station, setStationSelected, setShowPickStationAvailable) => {\n  event.preventDefault();\n  localStorage.setItem('station', station);\n  setStationSelected(station);\n  setShowPickStationAvailable(false);\n};\nexport const ShowDateReservation = _ref => {\n  let {\n    reservation\n  } = _ref;\n  const initialDate = new Date(reservation.startDate).toLocaleDateString();\n  const startHour = new Date(reservation.startDate).getHours().toString().padStart(2, '0');\n  const startMinutes = new Date(reservation.startDate).getMinutes().toString().padStart(2, '0');\n  const endHours = new Date(reservation.finalDate).getHours().toString().padStart(2, '0');\n  const endMinutes = new Date(reservation.finalDate).getMinutes().toString().padStart(2, '0');\n  console.log(endHours);\n  console.log(endMinutes);\n  return `${initialDate} from ${startHour}:${startMinutes} to ${endHours}:${endMinutes}`;\n};\n_c = ShowDateReservation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowDateReservation\");","map":{"version":3,"names":["axios","baseURL","availableStations","object","get","createBooking","post","submit","e","user","navigate","newReservation","stationSelected","setShowErrorMsg","setFinalShowPickTime","preventDefault","today","Date","now","dateSelected","startDate","getTime","alert","reservation","stationName","name","username","state","message","err","console","log","startTime","setNewReservation","setStationSelected","target","value","finalTime","finalDate","verifyAvailable","setStationsAvailable","setShowPickStationAvailable","initialDate","endDate","stations","data","handlePickSelected","event","station","localStorage","setItem","ShowDateReservation","toLocaleDateString","startHour","getHours","toString","padStart","startMinutes","getMinutes","endHours","endMinutes"],"sources":["/home/shara/Workplace_Management/Frontend/src/components/pages/newReservation/NewReservation.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'http://localhost:8000/api/desktop/';\n\nexport const availableStations = async (object) => {\n  return await axios.get(baseURL, object)\n}\n\nexport const createBooking = async (object) => {\n  return await axios.post('http://localhost:8000/api/reservation/', object)\n}\n\nexport const submit = async (\n  e,\n  user,\n  navigate,\n  newReservation,\n  stationSelected,\n  setShowErrorMsg,\n  setFinalShowPickTime,\n) => {\n  e.preventDefault();\n  const today = Date.now();\n  const dateSelected = new Date(newReservation.startDate).getTime();\n  if (dateSelected < today) {\n    alert('it is not possible to make the reservation, invalid date');\n    setFinalShowPickTime(false);\n    return;\n  }\n  const reservation = {\n    stationName: stationSelected.name,\n    ...newReservation,\n    username: user.username,\n  };\n  try {\n    await createBooking(reservation);\n    navigate(\"/myreservations\", { state: { message: \"Reserva criada com sucesso!\" } });\n  } catch (err) {\n    console.log(err);\n    setShowErrorMsg(\"Ocorreu algum erro ao realizar a reserva\");\n  }\n};\n\nexport const startTime = (\n  e,\n  setNewReservation,\n  newReservation,\n  setFinalShowPickTime,\n  setStationSelected,\n  setShowErrorMsg\n) => {\n  const startDate = e.target.value;\n  setShowErrorMsg(false);\n  setStationSelected(false);\n  setNewReservation({ ...newReservation, [e.target.name]: startDate });\n  startDate !== null ? setFinalShowPickTime(true) : setFinalShowPickTime(false);\n};\n\nexport const finalTime = (newReservation, e, setNewReservation) => {\n  const finalDate = e.target.value\n  setNewReservation({ ...newReservation, [e.target.name]: finalDate });\n};\n\nexport const verifyAvailable = async (e, newReservation, setStationsAvailable, setShowPickStationAvailable) => {\n  e.preventDefault();\n  const initialDate = (newReservation.startDate);\n  const endDate = new Date(newReservation.finalDate);\n  const stations = await availableStations({\n    startDate: initialDate,\n    finalDate: endDate,\n  });\n  setStationsAvailable(stations.data);\n  setShowPickStationAvailable(true);\n};\n\nexport const handlePickSelected = (event, station, setStationSelected, setShowPickStationAvailable) => {\n  event.preventDefault();\n  localStorage.setItem('station', station);\n  setStationSelected(station);\n  setShowPickStationAvailable(false);\n};\n\nexport const ShowDateReservation = ({ reservation }) => {\n  const initialDate = new Date(reservation.startDate).toLocaleDateString();\n  const startHour = new Date(reservation.startDate).getHours().toString().padStart(2, '0');\n  const startMinutes = new Date(reservation.startDate).getMinutes().toString().padStart(2, '0');\n\n  const endHours = new Date(reservation.finalDate).getHours().toString().padStart(2, '0');\n  const endMinutes = new Date(reservation.finalDate).getMinutes().toString().padStart(2, '0');\n  console.log(endHours);\n  console.log(endMinutes);\n\n  return `${initialDate} from ${startHour}:${startMinutes} to ${endHours}:${endMinutes}`;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}