{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://localhost:8000/api/desktop/';\nexport const availableStations = async object => {\n  return await axios.get(baseURL, object);\n};\nexport const createBooking = async object => {\n  return await axios.post(baseURL, object);\n};\nexport const submit = async (e, newReservation, user, stationSelected, setShowErrorMsg, setFinalShowPickTime, navigate) => {\n  e.preventDefault();\n  const today = Date.now();\n  const dateSelected = new Date(newReservation.startDate).getTime();\n\n  if (dateSelected < today) {\n    setShowErrorMsg('não é possivel realizar a reserva, data inválida');\n    setFinalShowPickTime(false);\n    return;\n  }\n\n  const reservation = {\n    stationName: stationSelected.name,\n    ...newReservation,\n    username: user.username\n  };\n\n  try {\n    await createBooking(reservation);\n    navigate('/myreservations', {\n      state: {\n        message: 'Reserva criada com sucesso!'\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    setShowErrorMsg('Ocorreu algum erro ao realizar a reserva');\n  }\n};\nexport const startTime = (e, setNewReservation, newReservation, setFinalShowPickTime, setStationSelected, setShowErrorMsg) => {\n  const startDate = new Date(e.target.value);\n  setShowErrorMsg(false);\n  setStationSelected(false);\n  setNewReservation({ ...newReservation,\n    [e.target.name]: startDate\n  });\n  startDate !== null ? setFinalShowPickTime(true) : setFinalShowPickTime(false);\n};\nexport const finalTime = (newReservation, e, setNewReservation) => {\n  const initialDate = new Date(newReservation.startDate);\n  const finalDate = new Date( //  format yyyy/mm/dd hh:mm is ok\n  `${initialDate.getFullYear()}/${initialDate.getMonth() + 1}/${initialDate.getDate()} ${e.target.value}`);\n  setNewReservation({ ...newReservation,\n    [e.target.name]: finalDate\n  });\n};\nexport const verifyAvailable = async (e, newReservation, setStationsAvailable, setShowPickStationAvailable) => {\n  e.preventDefault();\n  const initialDate = new Date(newReservation.startDate);\n  const endDate = new Date(newReservation.finalDate);\n  const stations = await availableStations({\n    startDate: initialDate,\n    finalDate: endDate\n  });\n  setStationsAvailable(stations.data);\n  setShowPickStationAvailable(true);\n};\nexport const handlePickSelected = (event, station, setStationSelected, setShowPickStationAvailable) => {\n  event.preventDefault();\n  setStationSelected(station);\n  setShowPickStationAvailable(false);\n};\nexport const ShowDateReservation = _ref => {\n  let {\n    reservation\n  } = _ref;\n  const initialDate = new Date(reservation.startDate).toLocaleDateString();\n  const startHour = new Date(reservation.startDate).getHours().toString().padStart(2, '0');\n  const startMinutes = new Date(reservation.startDate).getMinutes().toString().padStart(2, '0');\n  const endHours = new Date(reservation.finalDate).getHours().toString().padStart(2, '0');\n  const endMinutes = new Date(reservation.finalDate).getMinutes().toString().padStart(2, '0');\n  return `${initialDate} das ${startHour}:${startMinutes} ás ${endHours}:${endMinutes}`;\n};\n_c = ShowDateReservation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowDateReservation\");","map":{"version":3,"names":["axios","baseURL","availableStations","object","get","createBooking","post","submit","e","newReservation","user","stationSelected","setShowErrorMsg","setFinalShowPickTime","navigate","preventDefault","today","Date","now","dateSelected","startDate","getTime","reservation","stationName","name","username","state","message","err","console","log","startTime","setNewReservation","setStationSelected","target","value","finalTime","initialDate","finalDate","getFullYear","getMonth","getDate","verifyAvailable","setStationsAvailable","setShowPickStationAvailable","endDate","stations","data","handlePickSelected","event","station","ShowDateReservation","toLocaleDateString","startHour","getHours","toString","padStart","startMinutes","getMinutes","endHours","endMinutes"],"sources":["/home/shara/Workplace_Management/Frontend/src/components/pages/newReservation/NewReservation.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'http://localhost:8000/api/desktop/';\n\nexport const availableStations = async (object) => {\n  return await axios.get(baseURL, object)\n}\n\nexport const createBooking = async (object) => {\n  return await axios.post(baseURL, object)\n}\n\nexport const submit = async (\n  e,\n  newReservation,\n  user,\n  stationSelected,\n  setShowErrorMsg,\n  setFinalShowPickTime,\n  navigate\n) => {\n  e.preventDefault();\n  const today = Date.now();\n  const dateSelected = new Date(newReservation.startDate).getTime();\n  if (dateSelected < today) {\n    setShowErrorMsg('não é possivel realizar a reserva, data inválida');\n    setFinalShowPickTime(false);\n    return;\n  }\n  const reservation = {\n    stationName: stationSelected.name,\n    ...newReservation,\n    username: user.username,\n  };\n  try {\n    await createBooking(reservation);\n    navigate('/myreservations', { state: { message: 'Reserva criada com sucesso!' } });\n  } catch (err) {\n    console.log(err);\n    setShowErrorMsg('Ocorreu algum erro ao realizar a reserva');\n  }\n};\n\nexport const startTime = (\n  e,\n  setNewReservation,\n  newReservation,\n  setFinalShowPickTime,\n  setStationSelected,\n  setShowErrorMsg\n) => {\n  const startDate = new Date(e.target.value);\n  setShowErrorMsg(false);\n  setStationSelected(false);\n  setNewReservation({ ...newReservation, [e.target.name]: startDate });\n  startDate !== null ? setFinalShowPickTime(true) : setFinalShowPickTime(false);\n};\n\nexport const finalTime = (newReservation, e, setNewReservation) => {\n  const initialDate = new Date(newReservation.startDate);\n  const finalDate = new Date( //  format yyyy/mm/dd hh:mm is ok\n    `${initialDate.getFullYear()}/${initialDate.getMonth() + 1}/${initialDate.getDate()} ${e.target.value}`\n  );\n  setNewReservation({ ...newReservation, [e.target.name]: finalDate });\n};\n\nexport const verifyAvailable = async (e, newReservation, setStationsAvailable, setShowPickStationAvailable) => {\n  e.preventDefault();\n  const initialDate = new Date(newReservation.startDate);\n  const endDate = new Date(newReservation.finalDate);\n  const stations = await availableStations({\n    startDate: initialDate,\n    finalDate: endDate,\n  });\n  setStationsAvailable(stations.data);\n  setShowPickStationAvailable(true);\n};\n\nexport const handlePickSelected = (event, station, setStationSelected, setShowPickStationAvailable) => {\n  event.preventDefault();\n  setStationSelected(station);\n  setShowPickStationAvailable(false);\n};\n\nexport const ShowDateReservation = ({ reservation }) => {\n  const initialDate = new Date(reservation.startDate).toLocaleDateString();\n  const startHour = new Date(reservation.startDate).getHours().toString().padStart(2, '0');\n  const startMinutes = new Date(reservation.startDate).getMinutes().toString().padStart(2, '0');\n\n  const endHours = new Date(reservation.finalDate).getHours().toString().padStart(2, '0');\n  const endMinutes = new Date(reservation.finalDate).getMinutes().toString().padStart(2, '0');\n\n  return `${initialDate} das ${startHour}:${startMinutes} ás ${endHours}:${endMinutes}`;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}