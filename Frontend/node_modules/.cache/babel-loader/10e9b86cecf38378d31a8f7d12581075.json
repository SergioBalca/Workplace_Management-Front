{"ast":null,"code":"var _jsxFileName = \"/home/shara/Workplace_Management/Frontend/src/services/auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { api, createSession } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(); // cria um contexto global para aplicação\n\nexport const Authprovider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [errorMsg, setErrorMsg] = useState(null); // impedir aplicação perder o login ao dar refresh:\n\n  useEffect(() => {\n    const recoveredUser = localStorage.getItem(\"user\");\n    const token = localStorage.getItem(\"token\");\n\n    if (recoveredUser && token) {\n      setUser(JSON.parse(recoveredUser));\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const loggedUser = await (await createSession(username, password)).data;\n      const token = loggedUser.token;\n      localStorage.setItem(\"user\", JSON.stringify(loggedUser.user));\n      localStorage.setItem(\"token\", token);\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n      setUser(loggedUser.user);\n      navigate(\"/\");\n    } catch (error) {\n      setErrorMsg(error.response.data.error);\n    }\n  }; // informações provisorias para adminstração do frontend\n\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n    api.defaults.headers.Authorization = null;\n    setUser(null);\n    navigate(\"/login\");\n  }; //user != null authenticated = true\n  //user == null authenticated = false\n\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authenticated: !!user,\n      user,\n      loading,\n      login,\n      logout,\n      errorMsg\n    } // sinal !!user => cast for boolean == boolean()\n    ,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authprovider, \"y9Us/klahhAGzW5dn+LlHFvqBPA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Authprovider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authprovider\");","map":{"version":3,"names":["React","useState","createContext","useEffect","useNavigate","api","createSession","AuthContext","Authprovider","children","navigate","user","setUser","loading","setLoading","errorMsg","setErrorMsg","recoveredUser","localStorage","getItem","token","JSON","parse","defaults","headers","Authorization","login","username","password","loggedUser","data","setItem","stringify","error","response","logout","removeItem","authenticated"],"sources":["/home/shara/Workplace_Management/Frontend/src/services/auth.jsx"],"sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { api, createSession } from \"./api\";\n\nexport const AuthContext = createContext(); // cria um contexto global para aplicação\n\nexport const Authprovider = ({ children }) => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  // impedir aplicação perder o login ao dar refresh:\n  useEffect(() => {\n    const recoveredUser = localStorage.getItem(\"user\");\n    const token = localStorage.getItem(\"token\");\n\n    if (recoveredUser && token) {\n      setUser(JSON.parse(recoveredUser));\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const loggedUser = await (await createSession(username, password)).data;\n      const token = loggedUser.token;\n      localStorage.setItem(\"user\", JSON.stringify(loggedUser.user));\n      localStorage.setItem(\"token\", token);\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n      setUser(loggedUser.user);\n      navigate(\"/\");\n    } catch (error) {\n      setErrorMsg(error.response.data.error);\n    }\n  };\n\n  // informações provisorias para adminstração do frontend\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n    api.defaults.headers.Authorization = null;\n\n    setUser(null);\n    navigate(\"/login\");\n  };\n\n  //user != null authenticated = true\n  //user == null authenticated = false\n  return (\n    <AuthContext.Provider\n      value={{ authenticated: !!user, user, loading, login, logout, errorMsg }} // sinal !!user => cast for boolean == boolean()\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,GAAT,EAAcC,aAAd,QAAmC,OAAnC;;AAEA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC,C,CAAqC;;AAE5C,OAAO,MAAMM,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC,CAJ4C,CAM5C;;EACAE,SAAS,CAAC,MAAM;IACd,MAAMc,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAtB;IACA,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;IAEA,IAAIF,aAAa,IAAIG,KAArB,EAA4B;MAC1BR,OAAO,CAACS,IAAI,CAACC,KAAL,CAAWL,aAAX,CAAD,CAAP;MACAZ,GAAG,CAACkB,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;IACD;;IAEDN,UAAU,CAAC,KAAD,CAAV;EACD,CAVQ,EAUN,EAVM,CAAT;;EAYA,MAAMY,KAAK,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;IAC1C,IAAI;MACF,MAAMC,UAAU,GAAG,MAAM,CAAC,MAAMvB,aAAa,CAACqB,QAAD,EAAWC,QAAX,CAApB,EAA0CE,IAAnE;MACA,MAAMV,KAAK,GAAGS,UAAU,CAACT,KAAzB;MACAF,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6BV,IAAI,CAACW,SAAL,CAAeH,UAAU,CAAClB,IAA1B,CAA7B;MACAO,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BX,KAA9B;MACAf,GAAG,CAACkB,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;MACAR,OAAO,CAACiB,UAAU,CAAClB,IAAZ,CAAP;MACAD,QAAQ,CAAC,GAAD,CAAR;IACD,CARD,CAQE,OAAOuB,KAAP,EAAc;MACdjB,WAAW,CAACiB,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBG,KAArB,CAAX;IACD;EACF,CAZD,CAnB4C,CAiC5C;;;EACA,MAAME,MAAM,GAAG,MAAM;IACnBjB,YAAY,CAACkB,UAAb,CAAwB,MAAxB;IACAlB,YAAY,CAACkB,UAAb,CAAwB,OAAxB;IACA/B,GAAG,CAACkB,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAqC,IAArC;IAEAb,OAAO,CAAC,IAAD,CAAP;IACAF,QAAQ,CAAC,QAAD,CAAR;EACD,CAPD,CAlC4C,CA2C5C;EACA;;;EACA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MAAE2B,aAAa,EAAE,CAAC,CAAC1B,IAAnB;MAAyBA,IAAzB;MAA+BE,OAA/B;MAAwCa,KAAxC;MAA+CS,MAA/C;MAAuDpB;IAAvD,CADT,CAC4E;IAD5E;IAAA,UAGGN;EAHH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CApDM;;GAAMD,Y;UACMJ,W;;;KADNI,Y"},"metadata":{},"sourceType":"module"}